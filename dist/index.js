!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).index={})}(this,(function(t){"use strict";class e extends HTMLElement{get draw(){return this._drawCallback}set draw(t){this._drawCallback=t,void 0!==this.raw&&this._drawCallback(this.getContext2D(),this.raw.getBoundingClientRect())}getContext2D(){return this.raw.getContext("2d")}createRaw(){const t=document.createElement("canvas");return t.style.width=this.style.width,t.style.height=this.style.height,t}disconnectedCallback(){this.observer.disconnect()}connectedCallback(){this.style.display="flex",this.observer=new ResizeObserver((t=>{const e=this.getContext2D(),s=this.raw.getBoundingClientRect(),a=devicePixelRatio||1;this.raw.width=s.width*a,this.raw.height=s.height*a,e.scale(a,a),this.draw&&this.draw(e,s)})),this.observer.observe(this.raw=this.createRaw());this.attachShadow({mode:"closed"}).appendChild(this.raw)}}customElements.define("sharp-canvas",e);class s extends HTMLElement{}class a{constructor(t,e){this.data=t,this.index=e}}class i{constructor(t,e){this.key=t,this.listeners=[],this._value=e}set value(t){this.notifyListeners(this._value=t)}get value(){return this._value}addListener(t){if(this.listeners.includes(t))throw new Error("A given listener is already registered.");this.listeners.push(t)}removeListener(t){if(!this.listeners.includes(t))throw new Error("A given listener is already not registered.");this.listeners=this.listeners.filter((e=>e!==t))}notifyListeners(t){this.listeners.forEach((e=>e(t)))}createState(t){return new a(this,t)}}class n extends HTMLElement{connectedCallback(){const t=this.getAttribute("key"),e=Number(this.getAttribute("value"));if(null==e)throw new Error("Required attribute 'value' not defined in <graph-data> element.");this.data=new i(t,e)}attributeChangedCallback(t,e,s){if(null!=e&&e!=s){if("key"==t)throw new Error("The key, which is a unique identifier of the graph data cannot be changed.");this.data.value=s}}}n.observedAttributes=["key","value"],customElements.define("graph-data",n);class r extends a{constructor(t){super(t.data,t.index)}draw(t,e,s,a){t.canvas.width,t.canvas.height}}class h extends s{constructor(){super(...arguments),this.states=[]}get stateLength(){return this.states.length}attach(t){const e=this.stateLength,s=new r(t.createState(e));s.data.addListener((t=>{console.log(s.data.key+" = "+t)})),this.states.push(s)}detech(t){this.states=this.states.filter((e=>e.data!==t))}draw(t,e){if(this.stateLength<1)throw new Error("The attached graph-data states for a line must be at least one.");const s=e.width/this.stateLength;console.log(s),t.beginPath(),t.strokeStyle="rgb(0, 100, 255)",t.lineWidth=3,t.lineCap="round",t.lineJoin="round",t.moveTo(15,15),t.lineTo(e.width/2-15,e.height-15),t.lineTo(e.width-15,e.height/2),t.stroke()}createCanvas(){var t,e;const s=document.createElement("sharp-canvas");return s.style.width=null!==(t=this.getAttribute("width"))&&void 0!==t?t:"100%",s.style.height=null!==(e=this.getAttribute("height"))&&void 0!==e?e:"250px",s.draw=(t,e)=>this.draw(t,e),s}disconnectedCallback(){this.observer.disconnect()}connectedCallback(){var t;let e=null!==(t=this.getAttribute("initstate"))&&void 0!==t?t:this.getAttribute("initState");null!=e&&new Function(e)(),this.style.display="flex";this.attachShadow({mode:"open"}).appendChild(this.canvas=this.createCanvas());for(const t of this.children){if(t instanceof n==0)throw"All children of graph elements must only <graph-data> elements defined.";this.attach(t.data)}this.observer=new MutationObserver(((t,e)=>{const s=t=>{if(t instanceof n==0)throw new Error("The element attached to this element is not a <graph-data> element.");this.attach(t.data)},a=t=>{if(t instanceof n==0)throw new Error("The element detached to this element is not a <graph-data> element.");this.detech(t.data)};for(const e of t){const t=e.addedNodes,i=e.removedNodes;0!=t.length&&t.forEach(s),0!=i.length&&i.forEach(a)}})),this.observer.observe(this,{childList:!0})}}customElements.define("line-graph",h),t.GraphData=i,t.GraphDataElement=n,t.GraphDataState=a,t.GraphElement=s,t.LineGraphDataState=r,t.LineGraphElement=h,t.SharpCanvasElement=e}));
//# sourceMappingURL=index.js.map
